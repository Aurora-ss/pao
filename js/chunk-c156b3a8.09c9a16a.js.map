{"version":3,"sources":["webpack:///./node_modules/@videojs/vhs-utils/es/codecs.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/@xmldom/xmldom/lib/index.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/@videojs/vhs-utils/es/id3-helpers.js","webpack:///./node_modules/@videojs/xhr/lib/index.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack:///./src/assets/login/q_message.svg","webpack:///./node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack:///./node_modules/mux.js/lib/tools/parse-sidx.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack:///./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/media-groups.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/@xmldom/xmldom/lib/conventions.js","webpack:///./node_modules/@videojs/vhs-utils/es/media-types.js","webpack:///./node_modules/@videojs/xhr/lib/http-handler.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/mux.js/lib/utils/numbers.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/@xmldom/xmldom/lib/dom-parser.js","webpack:///./node_modules/@xmldom/xmldom/lib/entities.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/stream.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack:///./node_modules/@videojs/vhs-utils/es/byte-helpers.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/@xmldom/xmldom/lib/sax.js","webpack:///./node_modules/@xmldom/xmldom/lib/dom.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/@videojs/vhs-utils/es/mp4-helpers.js","webpack:///./node_modules/@videojs/vhs-utils/es/opus-helpers.js","webpack:///./node_modules/@videojs/vhs-utils/es/ebml-helpers.js","webpack:///./node_modules/@videojs/vhs-utils/es/nal-helpers.js","webpack:///./node_modules/@videojs/vhs-utils/es/containers.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js"],"names":["regexs","mp4","webm","ogg","video","audio","text","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","replace","orig","profile","avcLevel","profileHex","Number","toString","slice","avcLevelHex","parseCodecs","codecString","codecs","split","result","forEach","codecType","trim","name","match","exec","toLowerCase","length","type","substring","details","push","mediaType","codecsFromDefault","master","audioGroupId","mediaGroups","AUDIO","audioGroup","audioType","default","playlists","attributes","CODECS","isAudioCodec","test","isTextCodec","getMimeForCodec","map","c","container","every","browserSupportsCodec","MediaSource","isTypeSupported","muxerSupportsCodec","i","DEFAULT_AUDIO_CODEC","DEFAULT_VIDEO_CODEC","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","len","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","join","extraBytes","parts","maxChunkLength","len2","dom","DOMImplementation","XMLSerializer","DOMParser","window","vttjs","module","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","ID3","getId3Size","bytes","offset","flags","returnSize","footerPresent","getId3Offset","_extends","isFunction","createXHR","httpHandler","parseHeaders","headers","row","index","key","value","isArray","forEachArray","array","iterator","isEmpty","obj","hasOwnProperty","initParams","uri","options","callback","params","_createXHR","called","err","response","body","readystatechange","xhr","readyState","setTimeout","loadFunc","getBody","undefined","responseText","getXml","isJson","JSON","parse","e","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","aborted","status","useXDR","method","url","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","documentElement","nodeName","noop","toUpperCase","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","ONE_SECOND_IN_TS","seconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","atob","s","Buffer","from","decodeB64ToUint8Array","b64Text","decodedString","DEFAULT_LOCATION","resolveUrl","baseUrl","relativeUrl","location","href","nativeURL","URL","protocolLess","removeLocation","buildAbsoluteURL","newUrl","protocol","getUint64","parseSidx","view","DataView","buffer","byteOffset","version","subarray","references","referenceId","getUint32","timescale","earliestPresentationTime","firstOffset","referenceCount","getUint16","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","Object","prototype","fn","string","call","alert","confirm","prompt","forEachMediaGroup","groups","groupKey","labelKey","mediaProperties","isObject","merge","objects","reduce","source","keys","concat","values","o","k","flatten","lists","x","y","list","findIndexes","l","a","union","keyFunction","acc","el","errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","urlTypeToSegment","range","indexRange","segment","resolvedUri","rangeStr","ranges","startRange","BigInt","parseInt","endRange","MAX_SAFE_INTEGER","byterange","byteRangeToString","parseEndNumber","endNumber","isNaN","segmentRange","duration","sourceDuration","periodDuration","segmentDuration","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","Infinity","now","periodStartWC","periodEndWC","segmentCount","Math","ceil","availableStart","floor","availableEnd","max","min","toSegments","number","startNumber","timeline","time","parseByDuration","segments","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","playlist","sidx","sidxByteRange","sidxEnd","mediaReferences","filter","r","endList","startIndex","mediaSequence","reference","size","endIndex","SUPPORTED_MEDIA_TYPES","TIME_FUDGE","getUniqueTimelineStarts","timelineStarts","sort","b","findPlaylistWithName","NAME","getMediaGroupPlaylists","manifest","mediaGroupPlaylists","properties","group","label","updateMediaSequenceForPlaylist","updateSequenceNumbers","oldPlaylists","newPlaylists","discontinuitySequence","findIndex","oldPlaylist","firstNewSegment","oldMatchingSegmentIndex","oldSegment","abs","discontinuity","discontinuityStarts","unshift","oldMatchingSegment","positionManifestOnTimeline","oldManifest","newManifest","generateSidxKey","mergeDiscontiguousPlaylists","mergedPlaylists","id","lang","contentProtection","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","isAudioOnly","BANDWIDTH","bandwidth","targetDuration","SUBTITLES","formatVttPlaylist","m3u8Attributes","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","role","language","roleLabel","autoselect","formatted","firstLabel","organizeVttPlaylists","organizeCaptionServices","captionServices","svcObj","svc","service","channel","instreamId","aspectRatio","easyReader","formatVideoPlaylist","RESOLUTION","width","height","frameRate","videoOnly","mimeType","contentType","audioOnly","vttOnly","addMediaSequenceValues","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","previousManifest","eventStream","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","Boolean","allowCache","VIDEO","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","subs","cc","getLiveRValue","parseByTimeline","segmentTimeline","media","sIndex","S","d","repeat","segmentTime","t","count","nextS","identifierPattern","identifierReplacement","identifier","format","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","Time","presentationTimeOffset","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentInfo","segmentAttributes","segmentsFn","template","base","segmentsInfo","toPlaylists","representations","findChildren","element","childNodes","tagName","getContent","textContent","parseDivisionValue","parseFloat","prev","current","parseDuration","str","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","year","month","day","hour","minute","second","parseDate","dateRegex","Date","parsers","parsedValue","parseAttributes","parseFn","DEFAULT","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","tag","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","node","schemeIdUri","keySystem","psshNode","pssh","parseCaptionServiceMetadata","opts","opt","val","toEventStream","period","eventStreamAttributes","event","eventAttributes","messageData","contentEncoding","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","attrs","accessibility","labelVal","nodeValue","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","mpd","manifestUri","periodNodes","mediaPresentationDuration","periods","priorPeriod","representationInfo","stringToMpdXml","manifestString","parser","xml","parseFromString","getElementsByTagName","parseUTCTimingScheme","UTCTimingNode","parsedManifestInfo","parseUTCTiming","find","predicate","ac","item","freeze","object","oc","assign","target","TypeError","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","httpResponseHandler","decodeResponseBody","responseBody","cause","TextDecoder","charset","getCharset","decode","String","fromCharCode","apply","contentTypeHeader","_contentType$split","SafeParseTuple","reviver","error","read","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","NaN","pow","write","rt","log","LN2","bind","arguments","__esModule","this","MAX_UINT32","dv","getBigUint64","autoKeyword","directionSetting","alignSetting","findDirectionSetting","dir","findAlignSetting","align","startTime","endTime","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","defineProperties","enumerable","get","set","setting","SyntaxError","console","warn","displayState","getCueAsHTML","convertCueToDOMTree","conventions","entities","sax","ParseError","XMLReader","normalizeLineEndings","input","locator","buildErrorHandler","errorImpl","domBuilder","DOMHandler","errorHandler","isCallback","Function","build","msg","_locator","cdata","position","lineNumber","columnNumber","systemId","_toString","chars","substr","java","appendElement","hander","currentElement","appendChild","doc","defaultNSMap","xmlns","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","normalize","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","createElementNS","getURI","getValue","attr","getQName","createAttributeNS","getLocator","setAttributeNode","endElement","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","createTextNode","skippedEntity","endDocument","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","fatalError","__DOMHandler","amp","apos","gt","lt","quot","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copy","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","Element","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","pre","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","base64","ieee754","typedArraySupport","__proto__","foo","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","checked","isEncoding","actual","fromArrayLike","isBuffer","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","global","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","pos","swap16","swap32","swap64","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","units","leadSurrogate","byteArray","hi","lo","src","dst","win","self","document","_objCreate","create","F","ParsingError","errorData","message","parseTimeStamp","computeSeconds","h","f","Settings","parseOptions","keyValueDelim","groupDelim","kv","v","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","consumeCueSettings","settings","region","alt","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","left","center","middle","right","positionAlign","skipWhitespace","constructor","BadSignature","dflt","defaultKey","has","TEXTAREA_ELEMENT","createElement","TAG_NAME","u","ruby","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape","innerHTML","shouldAdd","annotation","rootDiv","tagStack","pop","classes","cl","bgColor","colorName","propName","propValue","style","className","strongRTLRanges","isStrongRTLChar","charCode","currentRange","determineBidi","cueDiv","nodeStack","pushNodes","nextTextNode","innerText","computeLinePos","track","textTrackList","mediaElement","trackList","mode","StyleBox","CueStyleBox","styleOptions","styles","color","backgroundColor","display","writingMode","unicodeBidi","applyStyles","direction","textAlign","font","whiteSpace","textPos","formatStyle","move","box","BoxPosition","lh","offsetHeight","offsetWidth","offsetTop","rects","getClientRects","getBoundingClientRect","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","p","intersectPercentage","boxPosition","linePos","step","round","maxPosition","initialAxis","reverse","calculatedPercentage","toCSSCompatValues","unit","toMove","overlaps","b2","boxes","intersectArea","getSimpleBoxPosition","StringDecoder","decodeURIComponent","encodeURIComponent","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","processCues","cues","overlay","firstChild","removeChild","paddedOverlay","shouldCompute","margin","fontSize","Parser","decoder","state","reportOrThrowError","onparsingerror","collectNextLine","parseRegion","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","ontimestampmap","parseHeader","stream","alreadyCollectedLine","hasSubstring","oncue","flush","onflush","root","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","baseURL","relativeURL","alwaysNormalize","basePartsForNormalise","parseURL","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","query","fragment","baseURLPath","newPath","Stream","listeners","_proto","on","listener","off","splice","trigger","callbacks","args","_length","_i","dispose","pipe","destination","super","nextNewline","TAB","parseByterange","byterangeString","attributeSeparator","keyvalue","RegExp","customParsers","tagMappers","newLines","mapper","mappedLine","newLine","tagType","title","playlistType","allowed","URI","BYTERANGE","resolution","dateTimeString","dateTimeObject","IV","Uint32Array","PRECISE","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","expression","customType","dataParser","mapFn","camelCase","camelCaseKeys","setHoldBack","serverControl","partTargetDuration","hb","phb","minTargetDuration","minPartDuration","lineStream","parseStream","uris","currentMap","currentUri","hasParts","defaultMediaGroups","widevineUuid","currentTimeline","lastByterangeEnd","lastPartByterangeEnd","daterangeTags","preloadHints","preloadSegment","entry","mediaGroup","rendition","METHOD","KEYFORMAT","VALID_METHODS","KEYID","keyId","iv","TYPE","mediaGroupType","AUTOSELECT","LANGUAGE","CHARACTERISTICS","characteristics","FORCED","forced","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","daterange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","class","newDateInSeconds","setSeconds","getSeconds","attribute","independentSegments","custom","missing","chunk","addParser","addTagMapper","countBits","countBytes","padStart","isArrayBufferView","isTypedArray","toUint8","toHexString","toBinaryString","BYTE_TABLE","bytesToNumber","Uint16Array","_temp","_ref","_ref$signed","signed","_ref$le","total","byte","exponent","numberToBytes","_temp2","_ref2","_ref2$le","byteCount","byteIndex","bytesToString","escape","stringToBytes","stringIsBytes","concatTypedArrays","_len","buffers","_key","totalLen","tempBuffer","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","aByte","keyCode","searchInput","hasKeyCode","which","names","search","foundNamedKey","codes","aliases","isEventKey","nameOrCode","alias","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","captureStackTrace","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","entityReplacer","charAt","appendText","xt","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","config","localNSMap","endMatch","endIgnoreCaseMach","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","addAttribute","qname","attributeNames","addValue","attrName","setTagName","nsp","nsPrefix","_copy","ns","elStartEnd","elEndStart","next","matchs","pubid","sysid","lastMatch","endDTD","lastIndex","getLocalName","notEmptyString","splitOnASCIIWhitespace","orderedSetReducer","toOrderedSet","arrayIncludes","dest","Class","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","Node","_xmlEncoder","_visitNode","nextSibling","Document","_nsMap","remove","_onUpdateChild","newChild","cs","child","_removeChild","previous","previousSibling","lastChild","hasValidParentNodeType","nodeType","hasInsertableNodeType","isElementNode","isTextNode","isDocTypeNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","hasElementChildThatIsNotChild","assertPreInsertionValidity1to5","parent","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","hasDoctypeChildThatIsNotChild","_insertBefore","_inDocumentAssertion","cp","newFirst","newLast","_appendSingleChild","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","refNode","lookupPrefix","visibleNamespaces","namespace","serializeToString","needNamespaceDefine","addSerializedAttribute","qualifiedName","prefixedNodeName","defaultNS","ai","nsi","internalSubset","importNode","deep","node2","cloneNode","attrs2","_ownerElement","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","nodeClassNames","matches","nodeClassNamesSet","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","doccy","minDoc","topLevel","version$6","hooks_","hooks","hook","removeHook","hookOnce","original","wrapper","FullscreenApi","prefixed","apiMap","specApi","browserApi","history","LogByTypeFactory","level","lvl","levels","lvlRegExp","info","createLogger$1","logByType","createLogger","subname","all","debug","fname","historyItem","clear","disable","enable","log$1","each","initial","accum","isPlain","merge$1","sources","defineLazyProperty","setter","writable","Obj","ANDROID_VERSION","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","TOUCH_ENABLED","isReal","navigator","maxTouchPoints","DocumentTouch","UAD","userAgentData","platform","brands","brand","USER_AGENT","userAgent","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","throwIfWhitespace","isEl","isInFrame","createQuerier","selector","context","querySelector","ctx","createEl","content","getOwnPropertyNames","appendContent","prependTo","hasClass","classToCheck","classList","contains","addClass","classesToAdd","add","removeClass","classesToRemove","toggleClass","classToToggle","toggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","blockTextSelection","focus","onselectstart","unblockTextSelection","computedStyle","findPosition","offsetParent","fullscreenElement","offsetLeft","getPointerPosition","translated","transform","boxTarget","boxW","offsetY","offsetX","changedTouches","pageX","pageY","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","getComputedStyle","computedStyleValue","getPropertyValue","Dom","videojs$1","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","removeEventListener","addEventListener","createStyleElement","setTextContent","styleSheet","cssText","DomData","WeakMap","_initialGuid","_supportsPassive","_guid","newGUID","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","delete","_handleMultipleEvents","types","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","supportsPassive","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","elemData","bubbles","targetData","one","func","any","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","throttle","last","performance","throttled","debounce","immediate","cancel","debounced","later","Fn","EVENT_MAP","EventTarget$2","ael","allowedEvents_","oldTimeout","dispatchEvent","objName","name_","isEvented","eventBusEl_","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","largs","targetOrType","typeOrListener","evented","eventBusKey","el_","StatefulMixin","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","Set","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","restoreEl","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","contentEl_","currentChild","getChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","contentEl","childFound","compEl","children","parentOptions","handleAdd","playerOptions","addChild","workingChildren","Tech","some","wchild","isTech","isReady_","readyQueue","skipListeners","dimension","widthOrHeight","pxIndex","computedWidthOrHeight","rule","currentDimension","blur","handleKeyDown","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","cancelAnimationFrame","idName","cancelName","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","rangeCheck","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","timeRangesObj","createTimeRanges$1","registerComponent","defaultImplementation","guide","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","createTimeRanges","createTimeRange","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ModalDialog","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","buildCSSClass","tabIndex","previouslyActiveEl_","localize","desc","fillAlways","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","show","conditionalFocus_","hide","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","activeElement","playerEl","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","tracks_","addTrack","labelchange_","rtrack","change","addtrack","removetrack","labelchange","disableOthers$1","enabled","AudioTrackList","changing_","enabledChange_","removeTrack","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","queueTrigger","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","nonLanguageTextTrackKind","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","trackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","newLabel","parseUrl","props","host","getAbsoluteURL","getFileExtension","splitPathRe","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","groupCollapsed","groupEnd","loadTrack","tech_","loaded_","TextTrack","srclang","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","isDisposed","rvf_","requestVideoFrameCallback","disposeHandler","stopTracking","startTracking","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","originalCue_","removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","NONE","LOADED","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","emitTapEvents","triggerSourceset","manualProgress","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","currentTimeInterval","manuallyTriggered","clearTracks","manualProgressOff","manualTimeUpdatesOff","removeRemoteTextTrack","error_","_isScrubbing","_seconds","trackListChanges","script","addWebVttScript_","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","manualCleanup","htmlTrackElement","createRemoteTextTrack","remoteTextTrackEls","getTrackElementByTrack_","removeTrackElement_","Promise","reject","cb","requestNamedAnimationFrame","cancelNamedAnimationFrame","override","_type","srcObj","canPlayType","techs_","canPlaySource","defaultTechOrder_","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","cleanupAutoTextTracks","registerTech","middlewares","middlewareInstances","TERMINATOR","use","middleware","setSourceHelper","setTech","mw","reduceRight","middlewareIterator","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","played","seekable","volume","ended","allowedSetters","setCurrentTime","setMuted","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","techOrder","techName","getTech","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","update","update_","crossorigin","poster","setSrc","loading","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","screenOrientation","screen","orientation","changeOrientationEvent","modes","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","allowMultipleShowingTracks","clearDisplay","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","cueEl","updateDisplayState","LoadingSpinner","isAudio","playerType","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","formattedTime_","oldNode","CurrentTimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent_","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","updateTime","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","calculateDistance","userSeek_","mouseTimeDisplay","handleAction","gotoFraction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","isSourceAudio","currentType","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","pictureInPictureEnabled","disablePictureInPicture","enableDocumentPictureInPicture","requestPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","MouseVolumeLevelDisplay","updateVolume","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","handleKeyPressHandler_","handleKeyPress","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","SkipForward","validOptions","skipTime","getSkipForwardTime","controlBar","skipButtons","forward","currentVideoTime","SkipBackward","getSkipBackwardTime","backward","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","removeEventListenerForItem","childComponent","addEventListenerForItem","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","addItem","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","lockShowing","unlockShowing","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","legendId","selectLabelledbyIds","optionId","createElSelect_","createElFgColor_","createElBgColor_","createElWinColor_","defaultsDescription","createElColors_","createElFont_","createElControls_","localStorage","getItem","setValues","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","TitleBar","updateDom_","techEl","techAriaAttrs","techAriaAttr","setState","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","triggerReady","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","overrideNative_","techTracks","currentTarget","removeOldTracks","removeTracks","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","webkitEnterFullScreen","HAVE_METADATA","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","addTextTrack","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","majorVersion","userActive","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","aspectRatio_","width_","height_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","playsinline","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","promise","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","userActions","click","inAllowedEls","doubleClick","userWasActive","cancelable","targetPlayer","isFs","fullscreen","msMatchesSelector","initTime","inactivityTimeout","defaultPlaybackRate","resolve","play_","isSrcReady","isSafariOrIOS","waitToPlay_","isNativeReplay","resetProgressBar_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","toggleFullscreenClass_","fullscreenOptions","offHandler","requestFullscreenHelper_","fsOptions","supportsFullScreen","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","documentPictureInPicture","pipContainer","titleBar","requestWindow","initialAspectRatio","copyStyleSheets","pipWindow","pipVideo","replaceWith","hotkeys","excludeElement","isContentEditable","allowedInputTypes","excludedTags","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","sourceOrder","isRetry","resetRetryOnError_","middlewareSource","src_","handleSrc_","notSupportedMessage","retry","stopListeningForErrors","sourceTech","selectSource","doReset_","resetControlBarUI_","resetPlaybackRate_","resetVolumeBar_","currentTimeDisplay","durationDisplay","progressControl","loadProgressBar","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","handleMouseUpAndMouseLeave","isAudio_","playerChildren","controlBarHeight","currentHeight","exitPromises","enableAudioOnlyUI_","disableAudioOnlyUI_","audioOnlyModePromise","enablePosterModeUI_","disablePosterModeUI_","modal","currentBreakpoint","currentWidth","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","currentBreakpointClass","responsive_","removeCurrentBreakpoint_","reset","artist","artwork","tt","currentSources","baseOptions","tagOptions","dataSetup","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","deprecate","warned","deprecateForMajor","oldName","newName","registerPlugin","usingPlugin","hasPlugin","normalizeId","getPlayer","defaultView","PlayerComponent","getPlayers","nId","getAllPlayers","writeable","mergeOptions","deregisterPlugin","getPlugins","getPluginVersion","addLanguage","EventTarget","QualityLevel","bitrate","QualityLevelList","levels_","selectedIndex_","qualityLevel","getQualityLevelById","removed","addqualitylevel","removequalitylevel","version$5","initPlugin$1","originalPluginFn","qualityLevels","qualityLevelList","resolveManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","results","findRange","findNextRange","findGaps","bufferIntersection","bufferA","bufferB","arity","extents","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","isRangeDifferent","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","Playlist","createPlaylistID","groupID","parseManifest","onwarn","oninfo","customTagParsers","customTagMappers","llhls","customParser","setupMediaPlaylist","playlistErrors_","setupMediaPlaylists","resolveMediaGroupUris","mainForMedia","addPropertiesToMain","createGroupID","phonyUri","audioOnlyMain","groupId","EventTarget$1","addLLHLSQueryDirectives","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","updateSegment","skipped","updateSegments","oldSegments","newSegments","newIndex","newSegment","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","vhs_","vhsOptions","handleMediaupdatetimeout_","playlistRequestError","haveMetadata","playlistString","startingState","playlistObject","parseManifest_","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","videojsXHR","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","xhrMethod","originalAbort","byterangeStr","byterangeEnd","byterangeStart","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","transmuxerPrependedSeconds","videoTimingInfo","transmuxedStart","transmuxedPresentationStart","startOfSegment","offsetFromSegmentStart","getTime","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","nextSegmentStart","lastSegmentStart","lastSegmentDuration","lastSegmentEnd","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","programDateTime","segmentTimeEpoch","programTimeEpoch","verifyProgramDateTimeTags","getProgramTime","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","retryCount","seekTo","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","dashGroupId","playlistId","parseMainXml","mainXml","srcUrl","removeOldMediaGroupLabels","newMain","updateMain","oldMain","noChanges","playlistUpdate","equivalentSidx","neitherMap","equivalentMap","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","filterChangedSidxMappings","videoSidx","mediaGroupSidx","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","childPlaylist_","mediaRequest_","fin","requestErrored_","internal","playlistExclusionDuration","minimumUpdatePeriodTimeout_","createMupOnMedia_","addSidxSegments_","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMain_","mainChanged","haveMain_","hasPendingRequest","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","mpl","mup","createMUPTimeout_","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","stringToArrayBuffer","browserWorkerPolyFill","workerObj","createObjectURL","Blob","blob","BlobBuilder","getBlob","factory","objectUrl","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","globalThis","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","MAX_UINT32$1","getUint64$3","numbers","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","mp4Generator","fileType","movie","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","dts","pts","keyFrame","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","createDefaultSample","sampleForFrame","frame","generateSampleTable$1","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","totalByteLength","generateSampleTableForFrame","concatenateNalDataForFrame","frameUtils$1","generateSampleTable","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","silence_1","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","ONE_SECOND_IN_TS$4","clock$2","clock$1","sumFrameByteLengths","currentObj","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","silentFrame","firstFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","audioFrameUtils$1","ONE_SECOND_IN_TS$3","collectDtsInfo","timelineStartInfo","maxSegmentPts","maxSegmentDts","clearDtsInfo","calculateTrackBaseMediaDecodeTime","scale","trackDecodeInfo$1","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","userIdentifier","parseUserData","sei","parseCaptionPackets","userData","ccData","discardEmulationPreventionBytes$1","newLength","newData","emulationPreventionBytesPositions","sourceIndex","captionPacketParser","discardEmulationPreventionBytes","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","get708CharFromCode","newCode","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","backspace","Cea708Service","serviceNum","currentWindow","windows","createTextDecoder","startPts","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","isMultiByte","extended","currentByte","nextByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","setConstants","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","Stream$6","MAX_TS","RO_THRESH","TYPE_SHARED","handleRollover$1","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","TimestampRolloverStream","handleRollover","typedArrayIndexOf$1","typedArray","fromIndex","currentIndex","typedArrayIndexOf","textEncodingDescriptionByte","Iso88591","Utf16","Utf16be","Utf8","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","LINK_MIME_TYPE","pictureType","pictureData","owner","privateData","parseId3Frames$1","frameSize","frameHeader","frameStart","tagSize","hasExtendedHeader","parseId3","parseId3Frames","parseSyncSafeInteger","Stream$5","StreamTypes$3","id3","bufferSize","dispatchType","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","MP2T_PACKET_LENGTH$1","SYNC_BYTE$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","streamType","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","parsePes","pes","ptsDtsFlags","startPrefix","packetLength","forceFlush","packetFlushable","trackId","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb$1","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","Stream$2","ExpGolomb","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","deltaScale","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","isLikelyAacData$1","percentEncode","parseIso88591","parseAdtsSize","lowThree","highTwo","parseType$4","parseSampleRate","parseAacTimestamp","isLikelyAacData","parseType","Stream$1","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","AUDIO_PROPERTIES$1","audioProperties","VIDEO_PROPERTIES$1","videoProperties","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","ptsOffsetFromDts","decodeDuration","presentationDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","halfSecond","allowableOverlap","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","audioTrack","caption","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","toUnsigned$3","toHexString$1","bin","toUnsigned","parseType$3","parseType_1","toUnsigned$2","parseType$2","findBox$2","subresults","findBox_1","toUnsigned$1","getUint64$2","parseTfdt$2","parseSampleFlags$1","parseSampleFlags_1","parseSampleFlags","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTrun$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","parseTfhd$2","compositionStartTime","getVideoTrackIds","getTracks","getTimescaleFromMediaHeader","getEmsgID3","window_1","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","findSeiNals","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","parseSamples","truns","allSamples","trackRun","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","parseEmbeddedCaptions","trackNals","CaptionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","captionParser","uint8ToCString$1","curChar","retString","uint8ToCString","getUint64$1","parseEmsgBox","boxData","scheme_id_uri","presentation_time","presentation_time_delta","event_duration","message_data","emsgBox","isValidEmsgBox","scaleTime","timeDelta","emsg","hasScheme","isValidV0Box","isDefined","isValidV1Box","emsg$1","findBox","parseType$1","parseTfhd","parseTrun","parseTfdt","window$1","traks","lowestTime","baseTime","trafBoxes","parsedTfhd","parsedTfdt","parsedTrun","hdlrs","tkhds","handlerType","getUint8","tkhdVersion","sampleDescriptions","codecConfig","codecConfigType","codecBox","segmentData","emsgBoxes","parsedBox","parsedId3Frames","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","pusi","payloadOffset","parsePesType","parsePesTime","parseNalUnitType","videoPacketContainsKeyFrame","nalType","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","probe$1","StreamTypes","probe","SYNC_BYTE","parsePsi_","table","parseAudioPes_","pesType","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","audioTimescale","inspectTs_","isAacData","tsInspector","wireTransmuxerEvents","initArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","MessageHandlers","trackIds","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","handleData_","transmuxedData","videoFrameDtsTime","videoFramePtsTime","handleDone_","handleGopInfo_","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","waitForEndedTimelineEvent","handleMessage","currentTransmux","dequeue","transmuxQueue","processAction","enqueueAction","transmux","createTransmuxer","term","segmentTransmuxer","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","handleInitSegmentResponse","encryptedBytes","parseError","handleSegmentResponse","newBytes","lastReachedChar","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","finish","id3Frames","probeResult","handleSegmentBytes","bytesAsUint8Array","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","decryptionWorker","decryptionHandler","decrypted","keyBytes","encrypted","decryptSegment","requestId","decryptedBytes","waitForCompletion","didError","segmentFinish","endOfAllRequests","handleLoadEnd","loadendState","abortFn","calledAbortFn","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","keyRequestOptions","keyRequestCallback","keyXhr","differentMapKey","mapKeyRequestOptions","mapKeyRequestCallback","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","activeXhr","logFn$1","getCodecs","mediaAttributes","isMaat","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","defaultCodecs","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","playlistController_","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","minRebufferMaxBandwidthSelector","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","concatSegments","segmentObj","createCaptionsTrackIfNotExists","inbandTextTracks","getTrackById","def","captionService","addCaptionData","captionArray","Cue","WebKitDataCue","deprecateOldCue","addMetadata","metadataArray","videoDuration","metadataTrack","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","createMetadataTrackIfNotExists","inBandMetadataTrackDispatchType","removeCuesFromTrack","removeDuplicateCuesFromTrack","duplicates","occurrences","dupe","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","shallowEqual","akeys","bkeys","QUOTA_EXCEEDED_ERR","getSyncSegmentCandidate","targetTime","timelineSegments","MIN_BACK_BUFFER","CHECK_BUFFER_DELAY","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","illegalMediaSwitch","loaderType","startingMedia","safeBackBufferTrimTime","trimTime","maxTrimTime","segmentInfoString","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","timestampOffsetForSegment","overrideCheck","shouldWaitForTimelineChange","timelineChangeController","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","mediaDuration","timingInfos","maxDuration","typeTimingInfo","segmentTooLong","getTroublesomeSegmentDurationMessage","sourceType","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","getMediaInfo_","videoBuffered","audioBuffered","storedMap","storedKey","playlist_","couldBeginLoading_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","buffered_","bufferedTime","preloaded","haveEnoughBuffer","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","videoTimestampOffset","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","simpleSegment","earlyAbortWhenNeeded_","checkForAbort_","checkForIllegalMediaSwitch","timeType","timingInfoProperty","captionData","hasAppendedData_","handleCaptions_","captionTracks","captionTrack","trackName","handleId3_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","initSegmentForMap","segmentKey","useVideoTimingInfo","firstVideoFrameTimeForData","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","processMetadataQueue_","appendData_","changedTimestampOffset","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","handleQuotaExceededError_","appendBuffer","handleAppendError_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","getInitSegmentAndUpdateState_","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","handleAbort_","handleProgress_","handleTrackInfo_","handleTimingInfo_","handleSegmentTimingInfo_","segmentRequestFinished_","removeToTime","previousSegment","saveTransferStats_","handleTimeout_","saveBandwidthRelatedStats_","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","endOfStream","segmentProcessingTime","segmentProcessingThroughput","bufferTypes","sourceBuffer","queuePending","nextQueueIndexOfType","queueEntry","shiftQueue","queueIndex","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","addSourceBuffer","mime","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","hasCreatedSourceBuffers","hasInitializedAnyEme","addOrChangeSourceBuffers","canRemoveSourceBuffer","SourceBuffer","canChangeType","processedAppend_","videoBuffer","que","audioBuffer","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","NoVttJsError","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","loadVttJs","combinedByteLength","combinedSegment","timestampOffsetForTimeline","checkTimestampOffset","skipEmptySegments_","stopForError","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","MPEGTS","LOCAL","mapData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","adOffset","adTotal","MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","unpad","padded","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","initVector","encrypted32","Int32Array","decipher","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","STEP","asyncStream_","decryptChunk_","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","segmentLoaders","mainSegmentLoader","activeTrack","activeGroup","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","isMainPlaylist","onGroupChanging","onTrackChanged","lastTrack","pc","selectPlaylist","fastQualityChange_","setAudio","excludePlaylist","defaultTrack","setupListeners","requestOptions","initialize","variantLabel","newProps","groupMatch","variants","groupKeys","groupPropertyList","activeTrack_","setupMediaGroups","audioSegmentLoader","activeAudioGroup","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_EXCLUSION_SECONDS","Vhs$1","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","shouldSwitchToMedia","currentPlaylist","nextPlaylist","bufferLowWaterLine","bufferHighWaterLine","bufferBasedABR","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","onLoad","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","shouldSwitchToMedia_","switchMedia_","newId","abrTimer_","checkABR_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","haveJsonSource","handleUpdatedMediaPlaylist","playlistToExclude","lastExcludeReason_","playlistOutdated","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mainMediaInfo","getExpiredTime","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","setDuration","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","getPendingSegmentPlaylist","playlistCodecs","supportFunction","unsupportedCodecs","unsupportedAudio","supporter","variantAudioGroup","switchMessages","newCodec","oldCodec","areMediaTypesKnown_","createSourceBuffers","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","newMax","enableFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","Representation","vhsHandler","qualityChangeFunction","renditionSelectionMixin","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","waiting_","isAfterSeekableRange","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","timeAhead","nextRange","livePoint","videoUnderflow","videoUnderflow_","skipTheGap_","allowedEnd","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","getSource","cleanupEvents","reinitPlugin","reloadSourceOnError","version$4","version$3","version$2","version$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","LOCAL_STORAGE_KEY","handleVhsMediaChange","handleVhsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","getAllPsshKeySystemsOptions","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","initializationFinishedPromises","keySessionCreatedPromises","setupEmeOptions","sourceOptions","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","expandDataUri","dataUri","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","overrideNativeAudioTracks","overrideNativeVideoTracks","featuresNativeVideoTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","useNetworkInformationApi","option","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","appendsToLoadedData_","timeToLoadedData","timeToLoadedData_","currentTech","playerDimensions","currentDimensions","setupEme_","setupQualityLevels_","mediaSourceUrl_","audioPlaylistLoader","initializedEme","createKeySessions_","didSetupEmeOptions","excludedHDPlaylists","handleWaitingForKey_","qualityLevels_","VhsSourceHandler","simpleType","getOverrideNative","canUseMsePlayback","defaultOverrideNative","supportsNativeMediaSources","DESCRIPTORS","normalizePaths","paths","headerSize","_DESCRIPTORS$z","dependsOnEsId","ocrEsId","descriptors","oti","maxBitrate","avgBitrate","complete","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getLength","removeLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","totalLength","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","positions","dataType","nalLimit","nalStart","nalsFound","nalOffset","findH264Nal","findH265Nal","CONSTANTS","_isLikely","docType","matroska","fmp4","ac3","avi","riff","isLikelyTypes","isLikelyFn","isLikely","scrollSetting","findScrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll"],"mappings":"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","file":"js/chunk-c156b3a8.09c9a16a.js","sourcesContent":["import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","module.exports = __webpack_public_path__ + \"img/q_message.fabf28d1.svg\";","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","/*! @name mpd-parser @version 1.1.1 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.1.1\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  const mergedPlaylists = values(playlists.reduce((acc, playlist) => {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n    if (!acc[name]) {\n      // First Period\n      acc[name] = playlist;\n      acc[name].attributes.timelineStarts = [];\n    } else {\n      // Subsequent Periods\n      if (playlist.segments) {\n        // first segment of subsequent periods signal a discontinuity\n        if (playlist.segments[0]) {\n          playlist.segments[0].discontinuity = true;\n        }\n\n        acc[name].segments.push(...playlist.segments);\n      } // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    }\n\n    acc[name].attributes.timelineStarts.push({\n      // Although they represent the same number, it's important to have both to make it\n      // compatible with HLS potentially having a similar attribute.\n      start: playlist.attributes.periodStart,\n      timeline: playlist.attributes.periodStart\n    });\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  return {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  sidxMapping = {},\n  previousManifest,\n  eventStream\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  if (eventStream && eventStream.length > 0) {\n    manifest.eventStream = eventStream;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTime.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTime\n   */\n  presentationTime(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nconst buildBaseUrls = (referenceUrls, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, {\n        baseUrl\n      })\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * A map callback that will parse all event stream data for a collection of periods\n * DASH ISO_IEC_23009 5.10.2.2\n * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n *\n * @param {PeriodInformation} period object containing necessary period information\n * @return a collection of parsed eventstream event objects\n */\n\nconst toEventStream = period => {\n  // get and flatten all EventStreams tags and parse attributes and children\n  return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n    const eventStreamAttributes = parseAttributes(eventStream);\n    const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n    return findChildren(eventStream, 'Event').map(event => {\n      const eventAttributes = parseAttributes(event);\n      const presentationTime = eventAttributes.presentationTime || 0;\n      const timescale = eventStreamAttributes.timescale || 1;\n      const duration = eventAttributes.duration || 0;\n      const start = presentationTime / timescale + period.attributes.start;\n      return {\n        schemeIdUri,\n        value: eventStreamAttributes.value,\n        id: eventAttributes.id,\n        start,\n        end: start + duration / timescale,\n        messageData: getContent(event) || eventAttributes.messageData,\n        contentEncoding: eventStreamAttributes.contentEncoding,\n        presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n      };\n    });\n  }));\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n    eventStream: flatten(periods.map(toEventStream))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throwsw on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest,\n    eventStream: parsedManifestInfo.eventStream\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","/*! @name m3u8-parser @version 6.2.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const daterangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.daterange = this.manifest.daterange || [];\n              this.manifest.daterange.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.daterange.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const daterange = this.manifest.daterange[index];\n\n              if (daterange.endDate && daterange.startDate && new Date(daterange.endDate) < new Date(daterange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (daterange.duration && daterange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (daterange.plannedDuration && daterange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!daterange.endOnNext;\n\n              if (endOnNextYes && !daterange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (daterange.duration || daterange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (daterange.duration && daterange.endDate) {\n                const startDate = daterange.startDate;\n                const newDateInSeconds = startDate.setSeconds(startDate.getSeconds() + daterange.duration);\n                this.manifest.daterange[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (daterange && !this.manifest.dateTimeString) {\n                this.trigger('warn', {\n                  message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n                });\n              }\n\n              if (!daterangeTags[daterange.id]) {\n                daterangeTags[daterange.id] = daterange;\n              } else {\n                for (const attribute in daterangeTags[daterange.id]) {\n                  if (daterangeTags[daterange.id][attribute] !== daterange[attribute]) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes and same attribute values'\n                    });\n                    break;\n                  }\n                }\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","/**\n * @license\n * Video.js 8.3.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport keycode from 'keycode';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.3.0\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecycle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nconst LogByTypeFactory = (name, log) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(name + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * *[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {...*} args\n   *           One or more messages or objects that should be logged.\n   */\n  const log = function (...args) {\n    logByType('log', level, args);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log);\n\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n  log.createLogger = subname => createLogger$1(name + ': ' + subname);\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {*} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {*}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {*} [initial = 0]\n *        Starting value\n *\n * @return {*}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Deprecated, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {*} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {ContentDescriptor} [content]\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      item = item.parentNode;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {*} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `Text`     | A TextNode. The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|Text|Array|Function} ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM style element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {Function} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document.documentElement;\n      const body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {Function} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {Function} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {*} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {CustomEvent} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    [target, type, listener] = args;\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listeners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored.\n   *\n   * @callback ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to initialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // Remove the placeholder event methods. If the component is evented, the\n    // real methods are added next\n    ['on', 'off', 'one', 'any', 'trigger'].forEach(fn => {\n      this[fn] = undefined;\n    });\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  // `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.\n  // They are replaced or removed in the constructor\n\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {}\n\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {}\n\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {}\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return { import('./player').default }\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overridden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registered as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overridden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attribute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {MouseEvent}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time, which mimics {@link TimeRanges}.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n *\n * @return  {TimeRange}\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n *\n * @return {TimeRange}\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param { import('./time').TimeRange } buffered\n *        The current `TimeRanges` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param { import('../tech/tech').default } tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (!this.opened_) {\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n      this.on('keydown', this.handleKeyDown_);\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  { import('./utils/dom').ContentDescriptor} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return { import('./utils/dom').ContentDescriptor}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param { import('./track').default[] } tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param { import('./track').default } track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param { import('./track').default } rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return { import('./track').default }\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param { import('./audio-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param { import('./audio-track').default } track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param { import('./video-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param { import('./video-track').default } track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param { import('./text-track').default } track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n\n  const props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  const a = document.createElement('a');\n  a.href = url;\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n  const details = {};\n  for (let i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  /* istanbul ignore if */\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n  return details;\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nconst getAbsoluteURL = function (url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Add the url to an anchor and let the browser parse it to convert to an absolute url\n    const a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  const urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return { import('../utils/time').TimeRange }\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   * @param {boolean} _isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing(_isScrubbing) {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @param {number} _seconds\n   *        Set the current time of the media to this.\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime(_seconds) {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks(override) {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks(override) {}\n\n  /**\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} _type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} _type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source handler when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param { import('../player').default } player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param { import('../tech/tech').default } tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {*}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param { import('../player').default } player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    // The el is an empty div to keep position in the DOM\n    // A picture and img el will be inserted when a source is set\n    return createEl('div', {\n      className: 'vjs-poster'\n    });\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.$('img')) {\n        // If the poster's element exists, give its value\n        return this.$('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    if (this.$('img')) {\n      this.$('img').crossOrigin = value;\n    }\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method. (Re)creates\n   * the inner picture and img elementss when needed.\n   *\n   * @param {string} [url]\n   *        The URL to the source for the `PosterImage`. If not specified or falsy,\n   *        any source and ant inner picture/img are removed.\n   */\n  setSrc(url) {\n    if (!url) {\n      this.el_.textContent = '';\n      return;\n    }\n    if (!this.$('img')) {\n      this.el_.appendChild(createEl('picture', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      }, {}, createEl('img', {\n        loading: 'lazy',\n        crossOrigin: this.crossOrigin()\n      }, {\n        alt: ''\n      })));\n    }\n    this.$('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayHandler = e => this.updateDisplay(e);\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', e => this.preselectTrack(e));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-control-text').textContent = this.localize('{1} is loading.', [this.player_.isAudio() ? 'Audio Player' : 'Video Player']);\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  { import('./player').default } player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended'], e => this.updateContent(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      role: 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" character prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param { import('../player').default } player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintended scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {MouseEvent}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp(event) {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {KeyboardEvent} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.userSeek_(newTime);\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => {\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n      const isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n      if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n        if (player.isInPictureInPicture()) {\n          player.exitPictureInPicture();\n        }\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enables or disables button based on availability of a Picture-In-Picture mode.\n   *\n   * Enabled if\n   * - `player.options().enableDocumentPictureInPicture` is true and\n   *   window.documentPictureInPicture is available; or\n   * - `player.disablePictureInPicture()` is false and\n   *   element.requestPictureInPicture is available\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false || this.player_.options_.enableDocumentPictureInPicture && 'documentPictureInPicture' in window$1) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param { import('../../component').default } self\n *        The component that should be hidden if volume is unsupported\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param { import('../../component').default } self\n *        A reference to the mute toggle button\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * Button to skip forward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n * e.g. options: {controlBar: {skipButtons: forward: 5}}\n *\n * @extends Button\n */\nclass SkipForward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipForwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipForwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.forward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips forward in the duration/seekable range by a configurable amount of seconds.\n   * If the time left in the duration/seekable range is less than the configured 'skip forward' time,\n   * skips to end of duration/seekable range.\n   *\n   * Handle a click on a `SkipForward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    let newTime;\n    if (currentVideoTime + this.skipTime <= duration) {\n      newTime = currentVideoTime + this.skipTime;\n    } else {\n      newTime = duration;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n  }\n}\nComponent$1.registerComponent('SkipForward', SkipForward);\n\n/**\n * Button to skip backward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n *  * e.g. options: {controlBar: {skipButtons: backward: 5}}\n *\n * @extends Button\n */\nclass SkipBackward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipBackwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipBackwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.backward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips backward in the video by a configurable amount of seconds.\n   * If the current time in the video is less than the configured 'skip backward' time,\n   * skips to beginning of video or seekable range.\n   *\n   * Handle a click on a `SkipBackward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const seekableStart = liveTracker && liveTracker.isLive() && liveTracker.seekableStart();\n    let newTime;\n    if (seekableStart && currentVideoTime - this.skipTime <= seekableStart) {\n      newTime = seekableStart;\n    } else if (currentVideoTime >= this.skipTime) {\n      newTime = currentVideoTime - this.skipTime;\n    } else {\n      newTime = 0;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n  }\n}\nSkipBackward.prototype.controlText_ = 'Skip Backward';\nComponent$1.registerComponent('SkipBackward', SkipBackward);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n *\n  * @typedef MenuKeys\n  * @array\n  */\nconst MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    el.replaceChild(createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    }), el.querySelector('.vjs-icon-placeholder'));\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.label);\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return { import('../../menu/menu').default }\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return  { import('./text-track-menu-item').default[] }\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.kind + ' settings');\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'main-desc') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'skipBackward', 'skipForward', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => this.open(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-text-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.on(this.$('.vjs-done-button'), 'click', () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), 'click', () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElSelect_(key, legendId = '', type = 'label') {\n    const config = selectConfigs[key];\n    const id = config.id.replace('%s', this.id_);\n    const selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [`<${type} id=\"${id}\" class=\"${type === 'label' ? 'vjs-label' : ''}\">`, this.localize(config.label), `</${type}>`, `<select aria-labelledby=\"${selectLabelledbyIds}\">`].concat(config.options.map(o => {\n      const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [`<option id=\"${optionId}\" value=\"${o[0]}\" `, `aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`, this.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElFgColor_() {\n    const legendId = `captions-text-legend-${this.id_}`;\n    return ['<fieldset class=\"vjs-fg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text'), '</legend>', '<span class=\"vjs-text-color\">', this.createElSelect_('color', legendId), '</span>', '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElBgColor_() {\n    const legendId = `captions-background-${this.id_}`;\n    return ['<fieldset class=\"vjs-bg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text Background'), '</legend>', '<span class=\"vjs-bg-color\">', this.createElSelect_('backgroundColor', legendId), '</span>', '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElWinColor_() {\n    const legendId = `captions-window-${this.id_}`;\n    return ['<fieldset class=\"vjs-window vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Caption Area Background'), '</legend>', '<span class=\"vjs-window-color\">', this.createElSelect_('windowColor', legendId), '</span>', '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElControls_() {\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`, this.localize('Reset'), `<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`, '</button>', `<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')\n    });\n  }\n  content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    const cb = this.player_.controlBar;\n    const subsCapsBtn = cb && cb.subsCapsButton;\n    const ccBtn = cb && cb.captionsButton;\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  }\n\n  /**\n   * Repopulate dialog with new localizations on languagechange\n   */\n  handleLanguagechange() {\n    this.fill();\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nconst defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect whether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Whether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Whether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occurred after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Whether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, Object.values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param { import('./html5').default } tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set controls on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document.createElement('video');\n  const track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {boolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in three ways:\n * 1. By calling `videojs.getPlayer('example_video_1');`\n * 2. By calling `videojs('example_video_1');` (not recomended)\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n * @global\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Function} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overridable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s height to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calculate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    this.error(error);\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n    const isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS);\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && isSafariOrIOS) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // For native playback, reset the progress bar if we get a play call from a replay.\n    const isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n    if (isNativeReplay) {\n      this.resetProgressBar_();\n    }\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differentiate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit after all.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intended to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * This can use document picture-in-picture or element picture in picture\n   *\n   * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser\n   * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser\n   *\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}\n   * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if (this.options_.enableDocumentPictureInPicture && window$1.documentPictureInPicture) {\n      const pipContainer = document.createElement(this.el().tagName);\n      pipContainer.classList = this.el().classList;\n      pipContainer.classList.add('vjs-pip-container');\n      if (this.posterImage) {\n        pipContainer.appendChild(this.posterImage.el().cloneNode(true));\n      }\n      if (this.titleBar) {\n        pipContainer.appendChild(this.titleBar.el().cloneNode(true));\n      }\n      pipContainer.appendChild(createEl('p', {\n        className: 'vjs-pip-text'\n      }, {}, this.localize('Playing in picture-in-picture')));\n      return window$1.documentPictureInPicture.requestWindow({\n        // The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629\n        initialAspectRatio: this.videoWidth() / this.videoHeight(),\n        copyStyleSheets: true\n      }).then(pipWindow => {\n        this.el_.parentNode.insertBefore(pipContainer, this.el_);\n        pipWindow.document.body.append(this.el_);\n        pipWindow.document.body.classList.add('vjs-pip-window');\n        this.player_.isInPictureInPicture(true);\n        this.player_.trigger('enterpictureinpicture');\n\n        // Listen for the PiP closing event to move the video back.\n        pipWindow.addEventListener('unload', event => {\n          const pipVideo = event.target.querySelector('.video-js');\n          pipContainer.replaceWith(pipVideo);\n          this.player_.isInPictureInPicture(false);\n          this.player_.trigger('leavepictureinpicture');\n        });\n        return pipWindow;\n      });\n    }\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n    return Promise.reject('No PiP mode is available');\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if (window$1.documentPictureInPicture && window$1.documentPictureInPicture.window) {\n      // With documentPictureInPicture, Player#leavepictureinpicture is fired in the unload handler\n      window$1.documentPictureInPicture.window.close();\n      return Promise.resolve();\n    }\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'),\n      muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'),\n      playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      currentTimeDisplay,\n      durationDisplay,\n      progressControl,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    const {\n      seekBar\n    } = progressControl || {};\n    if (currentTimeDisplay) {\n      currentTimeDisplay.updateContent();\n    }\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n    if (seekBar) {\n      seekBar.update();\n      if (seekBar.loadProgressBar) {\n        seekBar.loadProgressBar.update();\n      }\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return { import('./tracks/html-track-element').default }\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * The player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object representing the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      const [err, data] = safeParseTuple(dataSetup || '{}');\n      if (err) {\n        log$1.error(err);\n      }\n      Object.assign(tagOptions, data);\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * A callback that is called when a component is ready. Does not have any\n * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n *\n * @callback ReadyCallback\n */\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n/*! @name videojs-contrib-quality-levels @version 3.0.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\n\nclass QualityLevelList extends videojs.EventTarget {\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    return list;\n  }\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} remove QualityLevel to remove to the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\n\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"3.0.0\";\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @function initPlugin\n */\n\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @function qualityLevels\n */\n\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.mergeOptions({}, options));\n}; // Register the plugin with video.js.\n\nregisterPlugin('qualityLevels', qualityLevels); // Include the version number.\n\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.0.2 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  const seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n}; // default function for creating a group id\n\nconst groupID = (type, group, label) => {\n  return `placeholder-uri-${type}-${group}-${label}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn(`manifest has no targetDuration defaulting to ${targetDuration}`);\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn(`manifest has no partTargetDuration defaulting to ${partTargetDuration}`);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n * @param {function} createGroupID\n *        A function to determine how to create the groupID for mediaGroups\n */\n\nconst addPropertiesToMain = (main, uri, createGroupID = groupID) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    // add a playlist array under properties\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const groupId = createGroupID(mediaType, groupKey, labelKey, p);\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls; // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    return parseManifest({\n      onwarn: ({\n        message\n      }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n      oninfo: ({\n        message\n      }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n      manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      llhls: this.llhls\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.src = resolveManifestRedirect(this.src, req);\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n}\n\n/**\n * @file xhr.js\n */\nconst {\n  xhr: videojsXHR\n} = videojs;\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      const newOptions = beforeRequest(options);\n      if (newOptions) {\n        options = newOptions;\n      }\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n    const request = xhrMethod(options, function (error, response) {\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n * periods without continuous playback this function may need modification as well as the parser.\n */\n\nconst dashGroupId = (type, group, label, playlist) => {\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n  const playlistId = playlist.attributes.NAME || label;\n  return `placeholder-uri-${type}-${group}-${playlistId}`;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl, dashGroupId);\n  return manifest;\n};\n/**\n * Removes any mediaGroup labels that no longer exist in the newMain\n *\n * @param {Object} update\n *         The previous mpd object being updated\n * @param {Object} newMain\n *         The new mpd object\n */\n\nconst removeOldMediaGroupLabels = (update, newMain) => {\n  forEachMediaGroup(update, (properties, type, group, label) => {\n    if (!(label in newMain.mediaGroups[type][group])) {\n      delete update.mediaGroups[type][group][label];\n    }\n  });\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n        if (!(label in update.mediaGroups[type][group])) {\n          update.mediaGroups[type][group][label] = properties;\n        } // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  }); // remove mediaGroup labels and references that no longer exist in the newMain\n\n  removeOldMediaGroupLabels(update, newMain);\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: `Unsupported ${container || 'unknown'} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    let newMain = parseMainXml({\n      mainXml: this.mainPlaylistLoader_.mainXml_,\n      srcUrl: this.mainPlaylistLoader_.srcUrl,\n      clientOffset: this.mainPlaylistLoader_.clientOffset_,\n      sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMain\n    }); // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/Users/ddashkevich/projects/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$3 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$3,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      if (isMultiByte) {\n        charCodeArray = [currentByte, nextByte];\n        i++;\n      } else {\n        charCodeArray = [currentByte];\n      }\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      char = get708CharFromCode(extended | currentByte);\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push('');\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        }\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row, index) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n        return '';\n      }\n    }, this) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = '';\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Tools for parsing ID3 frame data\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding \n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    };\n  var parseId3Frames$1 = function (data) {\n    var frameSize,\n      frameHeader,\n      frameStart = 10,\n      tagSize = 0,\n      frames = []; // If we don't have enough data for a header, 10 bytes, \n    // or 'ID3' in the first 3 bytes this is not a valid ID3 tag.\n\n    if (data.length < 10 || data[0] !== 'I'.charCodeAt(0) || data[1] !== 'D'.charCodeAt(0) || data[2] !== '3'.charCodeAt(0)) {\n      return;\n    } // the frame size is transmitted as a 28-bit integer in the\n    // last four bytes of the ID3 header.\n    // The most significant bit of each byte is dropped and the\n    // results concatenated to recover the actual value.\n\n    tagSize = parseSyncSafeInteger$1(data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n    // convenient for our comparisons to include it\n\n    tagSize += 10; // check bit 6 of byte 5 for the extended header flag.\n\n    var hasExtendedHeader = data[5] & 0x40;\n    if (hasExtendedHeader) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger$1(data.subarray(10, 14));\n      tagSize -= parseSyncSafeInteger$1(data.subarray(16, 20)); // clip any padding off the end\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger$1(data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        break;\n      }\n      frameHeader = String.fromCharCode(data[frameStart], data[frameStart + 1], data[frameStart + 2], data[frameStart + 3]);\n      var frame = {\n        id: frameHeader,\n        data: data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id; // parse frame values\n\n      if (frameParsers[frame.id]) {\n        // use frame specific parser\n        frameParsers[frame.id](frame);\n      } else if (frame.id[0] === 'T') {\n        // use text frame generic parser\n        frameParsers['T*'](frame);\n      } else if (frame.id[0] === 'W') {\n        // use URL link frame generic parser\n        frameParsers['W*'](frame);\n      }\n      frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    return frames;\n  };\n  var parseId3 = {\n    parseId3Frames: parseId3Frames$1,\n    parseSyncSafeInteger: parseSyncSafeInteger$1,\n    frameParsers: frameParsers\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    id3 = parseId3,\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = id3.parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += id3.parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= id3.parseSyncSafeInteger(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = id3.parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (id3.frameParsers[frame.id]) {\n          // use frame specific parser\n          id3.frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          id3.frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          id3.frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$4 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$4,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$3 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$3;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$2 = parseType_1;\n  var findBox$2 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$2;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$2 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$2(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$2 = tfdt;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfhd$1 = parseTfhd$2;\n  var window$2 = window_1;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun$1(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n          currentDts += window$2.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox$1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd$1(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  /**\n   * Returns the first string in the data array ending with a null char '\\0'\n   * @param {UInt8} data \n   * @returns the string with the null char\n   */\n\n  var uint8ToCString$1 = function (data) {\n    var index = 0;\n    var curChar = String.fromCharCode(data[index]);\n    var retString = '';\n    while (curChar !== '\\0') {\n      retString += curChar;\n      index++;\n      curChar = String.fromCharCode(data[index]);\n    } // Add nullChar\n\n    retString += curChar;\n    return retString;\n  };\n  var string = {\n    uint8ToCString: uint8ToCString$1\n  };\n  var uint8ToCString = string.uint8ToCString;\n  var getUint64$1 = numbers.getUint64;\n  /**\n   * Based on: ISO/IEC 23009 Section: 5.10.3.3\n   * References:\n   * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format\n   * https://aomediacodec.github.io/id3-emsg/\n   * \n   * Takes emsg box data as a uint8 array and returns a emsg box object\n   * @param {UInt8Array} boxData data from emsg box\n   * @returns A parsed emsg box object\n   */\n\n  var parseEmsgBox = function (boxData) {\n    // version + flags\n    var offset = 4;\n    var version = boxData[0];\n    var scheme_id_uri, value, timescale, presentation_time, presentation_time_delta, event_duration, id, message_data;\n    if (version === 0) {\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time_delta = dv.getUint32(offset);\n      offset += 4;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n    } else if (version === 1) {\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time = getUint64$1(boxData.subarray(offset));\n      offset += 8;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n    }\n    message_data = new Uint8Array(boxData.subarray(offset, boxData.byteLength));\n    var emsgBox = {\n      scheme_id_uri,\n      value,\n      // if timescale is undefined or 0 set to 1 \n      timescale: timescale ? timescale : 1,\n      presentation_time,\n      presentation_time_delta,\n      event_duration,\n      id,\n      message_data\n    };\n    return isValidEmsgBox(version, emsgBox) ? emsgBox : undefined;\n  };\n  /**\n   * Scales a presentation time or time delta with an offset with a provided timescale\n   * @param {number} presentationTime \n   * @param {number} timescale \n   * @param {number} timeDelta \n   * @param {number} offset \n   * @returns the scaled time as a number\n   */\n\n  var scaleTime = function (presentationTime, timescale, timeDelta, offset) {\n    return presentationTime || presentationTime === 0 ? presentationTime / timescale : offset + timeDelta / timescale;\n  };\n  /**\n   * Checks the emsg box data for validity based on the version\n   * @param {number} version of the emsg box to validate\n   * @param {Object} emsg the emsg data to validate\n   * @returns if the box is valid as a boolean\n   */\n\n  var isValidEmsgBox = function (version, emsg) {\n    var hasScheme = emsg.scheme_id_uri !== '\\0';\n    var isValidV0Box = version === 0 && isDefined(emsg.presentation_time_delta) && hasScheme;\n    var isValidV1Box = version === 1 && isDefined(emsg.presentation_time) && hasScheme; // Only valid versions of emsg are 0 and 1\n\n    return !(version > 1) && isValidV0Box || isValidV1Box;\n  }; // Utility function to check if an object is defined\n\n  var isDefined = function (data) {\n    return data !== undefined || data !== null;\n  };\n  var emsg$1 = {\n    parseEmsgBox: parseEmsgBox,\n    scaleTime: scaleTime\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox = findBox_1;\n  var parseType$1 = parseType_1;\n  var emsg = emsg$1;\n  var parseTfhd = parseTfhd$2;\n  var parseTrun = parseTrun$2;\n  var parseTfdt = parseTfdt$2;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader, getEmsgID3;\n  var window$1 = window_1;\n  var parseId3Frames = parseId3.parseId3Frames;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n      timescale = window$1.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  /**\n   * Returns an array of emsg ID3 data from the provided segmentData.\n   * An offset can also be provided as the Latest Arrival Time to calculate \n   * the Event Start Time of v0 EMSG boxes. \n   * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing\n   * \n   * @param {Uint8Array} segmentData the segment byte array.\n   * @param {number} offset the segment start time or Latest Arrival Time, \n   * @return {Object[]} an array of ID3 parsed from EMSG boxes\n   */\n\n  getEmsgID3 = function (segmentData, offset = 0) {\n    var emsgBoxes = findBox(segmentData, ['emsg']);\n    return emsgBoxes.map(data => {\n      var parsedBox = emsg.parseEmsgBox(new Uint8Array(data));\n      var parsedId3Frames = parseId3Frames(parsedBox.message_data);\n      return {\n        cueTime: emsg.scaleTime(parsedBox.presentation_time, parsedBox.timescale, parsedBox.presentation_time_delta, offset),\n        duration: emsg.scaleTime(parsedBox.event_duration, parsedBox.timescale),\n        frames: parsedId3Frames\n      };\n    });\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader,\n    getEmsgID3: getEmsgID3\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/Users/ddashkevich/projects/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  return finishProcessingFn(null, segment);\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    return callback({\n      internal: true,\n      message: `Found unsupported ${type || 'unknown'} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: result => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      doneFn(null, segment, result);\n    }\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n        if (probeResult.hasAudio && !isMuxed) {\n          audioStartFn(probeResult.audioStart);\n        }\n        if (probeResult.hasVideo) {\n          videoStartFn(probeResult.videoStart);\n        }\n        audioStartFn = null;\n        videoStartFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = captions => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        } // Run through the CaptionParser in case there are captions.\n        // Initialize CaptionParser if it hasn't been yet\n\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n          finishLoading();\n          return;\n        }\n        workerCallback({\n          action: 'pushMp4Captions',\n          endAction: 'mp4Captions',\n          transmuxer: segment.transmuxer,\n          data: bytesAsUint8Array,\n          timescales: segment.map.timescales,\n          trackIds: [tracks.video.id],\n          callback: message => {\n            // transfer bytes back to us\n            bytes = message.data.buffer;\n            segment.bytes = bytesAsUint8Array = message.data;\n            message.logs.forEach(function (log) {\n              onTransmuxerLog(merge(log, {\n                stream: 'mp4CaptionParser'\n              }));\n            });\n            finishLoading(message.captions);\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream;\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  for (let i = 0; i < cues.length; i++) {\n    const duplicates = [];\n    let occurrences = 0;\n    for (let j = 0; j < cues.length; j++) {\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n        occurrences++;\n        if (occurrences > 1) {\n          duplicates.push(cues[j]);\n        }\n      }\n    }\n    if (duplicates.length) {\n      duplicates.forEach(dupe => track.removeCue(dupe));\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\nconst QUOTA_EXCEEDED_ERR = 22;\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', () => {\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    }\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // on playlist changes we want it to be possible to fetch\n        // at the buffer for vod but not for live. So we use resetLoader\n        // for live and resyncLoader for vod. We want this because\n        // if a playlist uses independent and non-independent segments/parts the\n        // buffer may not accurately reflect the next segment that we should try\n        // downloading.\n        if (!newPlaylist.endList) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.activeInitSegmentId_ = null;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      const {\n        segmentIndex,\n        startTime,\n        partIndex\n      } = Playlist.getMediaInfoForTime({\n        exactManifestTimings: this.exactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      });\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${bufferedEnd}` : `currentTime ${this.currentTime_()}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray: id3Frames,\n      timestampOffset,\n      videoDuration: this.duration_()\n    });\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  getPendingSegmentPlaylist() {\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(`${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n\n    if (sourceUpdater.codecs[type] === codec) {\n      return;\n    }\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`);\n    sourceBuffer.changeType(mime);\n    sourceUpdater.codecs[type] = codec;\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // IE reports that it supports removeSourceBuffer, but often throws\n    // errors when attempting to use the function. So we report that it\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this as well.\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\nclass NoVttJsError extends Error {\n  constructor() {\n    super('Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');\n  }\n}\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.loaderType_ = 'subtitle';\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n      this.loadVttJs().then(() => this.segmentRequestFinished_(error, simpleSegment, result), () => this.stopForError({\n        message: 'Error loading vtt.js'\n      }));\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @throws NoVttJsError\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.WebVTT !== 'function') {\n      // caller is responsible for exception handling.\n      throw new NoVttJsError();\n    }\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const timestampmap = segmentInfo.timestampmap;\n    const diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {};\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/Users/ddashkevich/projects/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\n\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/Users/ddashkevich/projects/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings;\n    stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    stopLoaders(segmentLoader, mediaType);\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * @file playlist-controller.js\n */\nconst ABORT_EARLY_EXCLUSION_SECONDS = 60 * 2;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super();\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    this.mediaSource = new window$1.MediaSource();\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, this.requestOptions_) : new PlaylistLoader(src, this.vhs_, this.requestOptions_);\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks,\n      loadVttJs: () => new Promise((resolve, reject) => {\n        function onLoad() {\n          tech.off('vttjserror', onError);\n          resolve();\n        }\n        function onError() {\n          tech.off('vttjsloaded', onLoad);\n          reject();\n        }\n        tech.one('vttjsloaded', onLoad);\n        tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n        tech.addWebVttScript_();\n      })\n    }), options);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist.id || playlist.uri;\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      this.mainPlaylistLoader_.load(); // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      this.mainSegmentLoader_.load();\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead is roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.resetEverything(() => {\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n      // from the previously enabled rendition to load before the new playlist has finished loading\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n        this.tech_.setCurrentTime(this.tech_.currentTime() + 0.04);\n      } else {\n        this.tech_.setCurrentTime(this.tech_.currentTime());\n      }\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream\n\n    if (!media.endList) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', () => {\n          this.trigger('firstplay');\n          this.tech_.setCurrentTime(seekable.end(0));\n          this.hasPlayed_ = true;\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable.end(0));\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  onSyncInfoUpdate_() {\n    let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    let media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      return;\n    }\n    let expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n    const main = this.mainPlaylistLoader_.main;\n    const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n    if (mainSeekable.length === 0) {\n      return;\n    }\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        return;\n      }\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n    let oldEnd;\n    let oldStart;\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  }\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    };\n    const playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), playlist);\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n      const audioGroup = playlist.attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    changePlaylistFn();\n    if (enable) {\n      loader.trigger('renditionenabled');\n    } else {\n      loader.trigger('renditiondisabled');\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.0.2\";\nvar version$3 = \"6.3.0\";\nvar version$2 = \"1.0.1\";\nvar version$1 = \"6.0.0\";\nvar version = \"4.0.1\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the VHS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n */\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\n  // return for IE11 above, and the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n  const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  setOptions_() {\n    // defaults\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 5 * 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    };\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      if (e.status !== 'output-restricted') {\n        return;\n      }\n      const mainPlaylist = this.playlistController_.main();\n      if (!mainPlaylist || !mainPlaylist.playlists) {\n        return;\n      }\n      const excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n      mainPlaylist.playlists.forEach(playlist => {\n        if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n          if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n            playlist.excludeUntil = Infinity;\n            excludedHDPlaylists.push(playlist);\n          }\n        }\n      });\n      if (excludedHDPlaylists.length) {\n        videojs.log.warn('DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.', ...excludedHDPlaylists); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n        this.playlistController_.fastQualityChange_();\n      }\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n    // promises.\n\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options) {\n    const simpleType = simpleTypeFromSourceType(type);\n    if (!simpleType) {\n      return '';\n    }\n    const overrideNative = VhsSourceHandler.getOverrideNative(options);\n    const supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n    const canUseMsePlayback = !supportsTypeNatively || overrideNative;\n    return canUseMsePlayback ? 'maybe' : '';\n  },\n  getOverrideNative(options = {}) {\n    const {\n      vhs = {}\n    } = options;\n    const defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n    const {\n      overrideNative = defaultOverrideNative\n    } = vhs;\n    return overrideNative;\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n"],"sourceRoot":""}